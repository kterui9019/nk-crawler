import { assertEquals,assertArrayContains } from "https://deno.land/std@0.65.0/testing/asserts.ts";
import { procedure } from "../src/result.ts";

Deno.test("指定したレースIDの結果が取得できる", async () => {
  const raceId = "202006010101";
  const [raceExpected, resultExpected] = [[[
    "202006010101",
    "20200105",
    "3歳未勝利",
    "09:55",
    "ダ",
    "1200",
    "右",
    "晴",
    "良",
    "1",
    "中山",
    "1",
    "サラ系３歳",
    "未勝利",
    "牝[指]",
    "馬齢",
    "16",
    "510",
    "200",
    "130",
    "77",
    "51",
  ]], [
    [
      "202006010101", "1",
      "4",            "7",
      "2017101464",   "牝",
      "3",            "54.0",
      "01119",        "73.3",
      "",             "2",
      "3.6",          "38.9",
      "5-5",          "01132",
      "460",          "2"
    ],
    [
      "202006010101", "2",
      "1",            "1",
      "2017103291",   "牝",
      "3",            "54.0",
      "00641",        "73.3",
      "クビ",           "5",
      "17.2",         "38.0",
      "12-11",        "01163",
      "432",          "4"
    ],
    [
      "202006010101", "3",
      "2",            "3",
      "2017103186",   "牝",
      "3",            "54.0",
      "00726",        "73.7",
      "2.1/2",        "12",
      "199.0",        "38.7",
      "9-9",          "01024",
      "458",          "0"
    ],
    [
      "202006010101", "4",
      "3",            "6",
      "2017103154",   "牝",
      "3",            "54.0",
      "01029",        "73.8",
      "クビ",           "8",
      "50.4",         "39.2",
      "6-6",          "01030",
      "418",          "0"
    ],
    [
      "202006010101", "5",
      "6",            "12",
      "2017105401",   "牝",
      "3",            "54.0",
      "05575",        "73.8",
      "クビ",           "1",
      "1.6",          "39.7",
      "4-4",          "01059",
      "536",          "-2"
    ],
    [
      "202006010101", "6",
      "7",            "13",
      "2017104956",   "牝",
      "3",            "54.0",
      "01043",        "73.9",
      "クビ",           "9",
      "74.3",         "39.9",
      "2-3",          "01109",
      "428",          "8"
    ],
    [
      "202006010101", "7",
      "7",            "14",
      "2017109160",   "牝",
      "3",            "54.0",
      "00422",        "74.2",
      "2",            "11",
      "121.7",        "39.6",
      "6-8",          "01174",
      "424",          "0"
    ],
    [
      "202006010101", "8",
      "3",            "5",
      "2017103287",   "牝",
      "3",            "52.0",
      "01179",        "74.4",
      "1.1/4",        "10",
      "82.2",         "39.1",
      "12-13",        "01089",
      "460",          "-2"
    ],
    [
      "202006010101", "9",
      "5",            "10",
      "2017104634",   "牝",
      "3",            "54.0",
      "01096",        "74.7",
      "2",            "6",
      "28.8",         "40.7",
      "2-2",          "01048",
      "434",          "0"
    ],
    [
      "202006010101", "10",
      "5",            "9",
      "2017100847",   "牝",
      "3",            "51.0",
      "01164",        "74.8",
      "1/2",          "3",
      "9.5",          "40.9",
      "1-1",          "01141",
      "438",          "0"
    ],
    [
      "202006010101", "11",
      "2",            "4",
      "2017102095",   "牝",
      "3",            "53.0",
      "01161",        "74.9",
      "1/2",          "4",
      "14.5",         "40.2",
      "6-6",          "01115",
      "464",          "10"
    ],
    [
      "202006010101", "12",
      "1",            "2",
      "2017101861",   "牝",
      "3",            "54.0",
      "01122",        "74.9",
      "ハナ",           "7",
      "31.4",         "39.3",
      "16-15",        "01118",
      "424",          "-4"
    ],
    [
      "202006010101", "13",
      "8",            "15",
      "2017104350",   "牝",
      "3",            "51.0",
      "01177",        "75.3",
      "2",            "15",
      "474.2",        "39.9",
      "15-16",        "01131",
      "436",          "4"
    ],
    [
      "202006010101", "14",
      "8",            "16",
      "2017101747",   "牝",
      "3",            "51.0",
      "01173",        "75.4",
      "3/4",          "13",
      "233.1",        "40.4",
      "9-10",         "01031",
      "404",          "4"
    ],
    [
      "202006010101", "15",
      "4",            "8",
      "2017102716",   "牝",
      "3",            "54.0",
      "01129",        "75.6",
      "1.1/2",        "16",
      "561.3",        "40.3",
      "12-13",        "01043",
      "450",          "2"
    ],
    [
      "202006010101", "16",
      "6",            "11",
      "2017105743",   "牝",
      "3",            "54.0",
      "01140",        "76.2",
      "3.1/2",        "14",
      "392.6",        "41.2",
      "9-11",         "01035",
      "482",          "18"
    ]
  ]];

  const [raceActual, resultActual] = await procedure(raceId);

  assertEquals(raceActual, raceExpected);

  // idがuuidなのでlength+containsでチェック
  assertEquals(resultActual.length, 16)
  assertArrayContains(resultActual.flat(1), resultExpected.flat(1));
});

Deno.test("記号がない場合は空文字で埋める", async () => {
  const raceId = "202003010102";
  const expected = [
    [
      "202003010102",
      "20200411",
      "3歳未勝利",
      "10:20",
      "芝",
      "1200",
      "右",
      "晴",
      "良",
      "1",
      "福島",
      "1",
      "サラ系３歳",
      "未勝利",
      "",
      "馬齢",
      "16",
      "510",
      "200",
      "130",
      "77",
      "51",
    ],
  ];

  const [actual, _] = await procedure(raceId);

  assertEquals(actual, expected);
});

Deno.test("芝ダート混合の場合は、馬場状態をつなげて1カラムにする", async () => {
  const raceId = "201809010304";
  const expected = [
    [
      "201809010304",
      "20180303",
      "4歳上障害未勝利",
      "11:30",
      "障",
      "2970",
      "芝 ダート",
      "晴",
      "良/良",
      "1",
      "阪神",
      "3",
      "障害４歳以上",
      "未勝利",
      "(混)",
      "定量",
      "14",
      "780",
      "310",
      "200",
      "120",
      "78",
    ],
  ];

  const [actual, _] = await procedure(raceId);

  assertEquals(actual, expected);
});
